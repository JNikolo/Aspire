generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id             String   @id @default(uuid())
  authId         String   @unique
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  profileName    String?
  Habit          Habit[]
}

model Habit {
  id            Int                @id @default(autoincrement())
  habitName     String
  notifications Boolean
  userId        String
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  user          User               @relation(fields: [userId], references: [id], onDelete: Cascade)
  frequency     HabitFrequency[]
  selectedDays  HabitSelectedDay[]
}

model HabitSelectedDay {
  id        Int    @id @default(autoincrement())
  dayOfWeek String // Day of the week (e.g., 'Monday', 'Tuesday')
  habitId   Int // Foreign key to Habit

  habit Habit @relation(fields: [habitId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dayOfWeek String
  habit     Habit    @relation(fields: [habitId], references: [id], onDelete: Cascade)
}

model HabitFrequency {
  id        Int    @id @default(autoincrement())
  dayOfWeek String // Day of the week (e.g., 'Monday', 'Tuesday')
  habitId   Int // Foreign key to Habit

  habit Habit @relation(fields: [habitId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
